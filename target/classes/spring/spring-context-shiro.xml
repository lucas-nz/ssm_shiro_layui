<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	default-lazy-init="true">
   
  	<!-- realm 实现 
  	
  	
  	
   	<bean id="realm" class="com.zhousz.realm.Myrealm">
   		<property name="credentialsMatcher" ref="credentialsMatcher" />	
   	  	<property name="cachingEnabled" value="false" />
   	</bean>

    
    <bean id="cacheManager" class="com.zhousz.shiro.SpringCacheManagerWrapper">
        <property name="cacheManager" ref="springCacheManager"/>
    </bean>

   	
   	<bean id="credentialsMatcher" class="com.zhousz.credentials.RetryLimitHashedCredentialsMatcher">
   		
   		 <constructor-arg ref="cacheManager" /> 
   		<property name="hashAlgorithmName" value="md5"></property>
   		<property name="hashIterations" value="2"></property>
   		<property name="storedCredentialsHexEncoded" value="true"></property>
   	</bean>
  	
  	
  	-->
    
    <bean id="realm" class="com.zhousz.realm.Myrealm"></bean>
   
   
   
   
     <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
        <!--单个realm使用realm,如果有多个realm，使用realms属性代替-->  
        <property name="realm" ref="realm" />  
        <!-- <property name="cacheManager" ref="shiroEhcacheManager" /> -->  
    </bean>  
  
<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
        <property name="securityManager" ref="securityManager" />  
        <property name="loginUrl" value="/toLogin" />  
        <property name="successUrl" value="/index" />
        <!-- 此处可配合这篇文章来理解各个过滤连的作用http://blog.csdn.net/jadyer/article/details/12172839 -->  
        <!-- 下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的 -->  
        <!-- anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种 -->  
        <!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->  
        <property name="filterChainDefinitions">  
            <value>
            	/resources/** = anon 
            	/index = anon
            	/user/** = authc  
            </value>  
        </property>  
    </bean>  
    <!-- 用户授权/认证信息Cache, 采用EhCache 缓存 -->  
    <!--   
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
        <property name="cacheManagerConfigFile" value="/WEB-INF/ehcache-shiro.xml" />  
    </bean>   
    -->  
      
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->    
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>    
        
    <!-- AOP式方法级权限检查  -->  
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">    
        <property name="proxyTargetClass" value="true" />    
    </bean>    
      
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">    
        <property name="securityManager" ref="securityManager"/>    
    </bean> 
</beans>  